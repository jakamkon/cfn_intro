AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Launch an t2.micro instance in a default public subnet.

  - Add to Allowed values to verify instance types that we can use.
  - Use SSM Systems Manager Parameter Store to get the latest AMI id (instead of hardcoding it)
Parameters:
  InstanceType:
    Type: String
    Description: Instance Type
    Default: t3.nano
    AllowedValues:
      - t3.nano
      - t3.micro
      - t3.small
  AMIid:
    Description: Find the latest AMI ID using System Manager Parameter Store
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  SSHKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: An existing SSH key from your account
    Default: default
Resources:
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AMIid
      KeyName: !Ref SSHKeyName
      Tags:
        - Key: StackId
          Value: !Ref 'AWS::StackId'
        - Key: Name
          Value: Very simple CFN web server
      UserData: 
        Fn::Base64: |
          #!/bin/bash -xe
          # Setting up apache web server
          yum install -y httpd.x86_64
          systemctl start httpd.service
          systemctl enable httpd.service
          # Simple static webpage using metadata
          HOSTNAME=$(curl -s http://169.254.169.254/latest/meta-data/public-hostname)
          AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
          echo "Made by Cloudformation: $HOSTNAME located in $AZ" > /var/www/html/index.html
Outputs:
  URL:
    Value: !Sub |
     http://${WebServerInstance.PublicIp}
    Description: Newly created application URL