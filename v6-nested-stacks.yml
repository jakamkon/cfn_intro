AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Launch an t2.micro instance in a default public subnet.

  - Provision a security group from an external template 
    (and create nested stack)
Parameters:
  InstanceType:
    Type: String
    Description: Instance Type
    Default: t3.nano
    AllowedValues:
      - t3.nano
      - t3.micro
      - t3.small
  AMIid:
    Description: Find the latest AMI ID using System Manager Parameter Store
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  SSHKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: An existing SSH key from your account
    Default: default
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Launch new instance in this VPC
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Launch new instance in this subnet (has to be in the VPC you've choosed above)
  DeploymentVersion:
    Type: String
    Default: not set
Resources:
  NestedStack:
    Type: 'AWS::CloudFormation::Stack'
    DeletionPolicy: Retain
    Properties:
      TemplateURL: https://devops-kuba.s3.eu-central-1.amazonaws.com/cloudformation/v6-nested-stacks-security-group.yml
      Parameters:
        VpcId: !Ref VpcId
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      Comment: Install a simple application
      'AWS::CloudFormation::Init':
        config:
          commands:
            test:
              command: "/home/ec2-user/updateMeta.sh"         
          packages:
            yum:
              httpd: []
          files:
            /home/ec2-user/updateMeta.sh:
              content: |
                    HOSTNAME=$(curl -s http://169.254.169.254/latest/meta-data/public-hostname)
                    AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
                    sed -e "s/\$HOSTNAME/$HOSTNAME/g" -e "s/\$AZ/$AZ/g" /var/www/html/index.html > /home/ec2-user/updated_index.html
                    cp /var/www/html/index.html /home/ec2-user/index.html.orig
                    cp /home/ec2-user/updated_index.html /var/www/html/index.html
              mode: '000744'
              owner: root
              group: root
            /var/www/html/index.html:
              content: !Sub |
                    <h1>Updated and made by Cloudformation: $HOSTNAME located in $AZ</h1>
                    <p>Stack name: ${AWS::StackName}</p>
                    <p>Region: ${AWS::Region}</p>
              mode: '000644'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                    [main]
                    stack=${AWS::StackId}
                    region=${AWS::Region}
                    interval=1
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub | 
                    [cfn-auto-reloader-hook]
                    triggers=post.update
                    path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init
                    action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServerInstance --region ${AWS::Region}
                    runas=root
              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AMIid
      KeyName: !Ref SSHKeyName
      SecurityGroupIds: 
        - !GetAtt NestedStack.Outputs.SecurityGroupId
      SubnetId: !Ref SubnetId
      Tags:
        - Key: StackId
          Value: !Ref 'AWS::StackId'
        - Key: Name
          Value: Very simple CFN web server
        - Key: DeploymentVersion
          Value: !Ref DeploymentVersion
      UserData: 
        Fn::Base64: !Sub |
         #!/bin/bash -xe
          yum update -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServerInstance --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServerInstance --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
Outputs:
  URL:
    Value: !Sub |
     http://${WebServerInstance.PublicIp}
    Description: Newly created application URL